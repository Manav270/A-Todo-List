{"version":3,"sources":["components/Todoitem.jsx","components/Input.jsx","components/App.jsx","index.js"],"names":["AddItems","props","onClick","onChecked","id","text","Input","useState","input","setInput","className","onChange","newval","target","value","onKeyDown","e","keyCode","onAdd","type","App","items","setitem","deleteItem","prevValue","filter","item","index","prevVal","map","todoitem","key","ReactDOM","render","document","getElementById"],"mappings":"4MAqBeA,MAnBf,SAAkBC,GAWd,OACI,yBAAKC,QAAS,WACVD,EAAME,UAAUF,EAAMG,MAEtB,4BAAMH,EAAMI,QCUTC,MA1Bf,SAAeL,GAEX,MAAuBM,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OACA,yBAAKC,UAAU,QACX,2BAAOC,SAbX,SAAgBV,GAEd,IAAMW,EAAOX,EAAMY,OAAOC,MAC1BL,EAASG,IAUkBG,UAAW,SAACC,GAPf,KAO+BA,EAP3CC,UACRhB,EAAMiB,MAAMV,GACZC,EAAS,MAK+CU,KAAK,OAAOL,MAAON,IAC7E,4BAAQN,QAAS,WACbD,EAAMiB,MAAMV,GACZC,EAAS,MAEX,wCCyBKW,MA5Cf,WAGE,MAAsBb,mBAAS,IAA/B,mBAAOc,EAAP,KAAaC,EAAb,KAWA,SAASC,EAAWnB,GAEnBkB,GAAQ,SAACE,GACN,OAAOA,EAAUC,QAAO,SAACC,EAAKC,GAC5B,OAAOA,IAAQvB,QAKrB,OACE,yBAAKM,UAAU,aACb,yBAAKA,UAAU,WACb,0CAEF,kBAAC,EAAD,CAAOQ,MArBX,SAAiBV,GAEfc,GAAQ,SAAAM,GACN,MAAM,GAAN,mBAAYA,GAAZ,CAAoBpB,UAmBpB,6BACE,4BACGa,EAAMQ,KAAI,SAACC,EAASH,GAAV,OACT,kBAAC,EAAD,CACAI,IAAKJ,EACLvB,GAAIuB,EACJtB,KAAMyB,EACN3B,UAAWoB,WCnCvBS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.e44964ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction AddItems(props){\r\n\r\n    // const [isDone,setDone] = useState(false);\r\n    // style={{textDecoration: isDone ? \"line-through\" : \"none\"}}\r\n    // function handleClick()\r\n    // {\r\n    //     setDone(prevVal => {\r\n    //         return !prevVal;\r\n    //     });\r\n    // }\r\n    \r\n    return(\r\n        <div onClick={()=>{\r\n            props.onChecked(props.id)\r\n        }}>\r\n            <li >{props.text}</li>\r\n        </div>\r\n    );\r\n}\r\nexport default AddItems;","import React ,{useState}from \"react\";\r\nfunction Input(props)\r\n{\r\n    const [input,setInput]=useState(\"\");\r\n    function update(props)\r\n    {\r\n      const newval=props.target.value\r\n      setInput(newval);\r\n    }\r\n    function something(event) {\r\n        if (event.keyCode === 13) {\r\n          props.onAdd(input);\r\n          setInput(\"\");\r\n        }\r\n      }\r\n    return(\r\n    <div className=\"form\">\r\n        <input onChange={update} onKeyDown={(e) => something(e) } type=\"text\" value={input}/>\r\n        <button onClick={()=>{\r\n            props.onAdd(input);\r\n            setInput(\"\");\r\n        }}>\r\n          <span>Add</span>\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\nexport default Input;","import React,{useState} from \"react\";\nimport AddItems from \"./Todoitem\";\nimport Input from \"./Input\";\nfunction App() {\n  \n  \n  const [items,setitem]=useState([]);\n  \n \n  \n  function addItem(input)\n  {\n    setitem(prevVal=>{\n      return [ ...prevVal,input]\n    })\n    \n  }\n  function deleteItem(id)\n  {\n   setitem((prevValue)=>{\n      return prevValue.filter((item,index)=>{\n        return index!==id\n      })\n    })\n  }\n \n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>ToDo List</h1>\n      </div>\n      <Input onAdd={addItem}/>\n      <div>\n        <ul>\n          {items.map((todoitem,index)=>(\n            <AddItems \n            key={index}\n            id={index}\n            text={todoitem}\n            onChecked={deleteItem}/>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}